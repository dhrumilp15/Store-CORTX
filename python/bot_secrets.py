"""Stores the config variables."""

from dotenv.main import load_dotenv
import os

load_dotenv()

DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")
TEST_DISCORD_TOKEN = os.getenv("TEST_DISCORD_TOKEN", None)
GUILD_ID = os.getenv("GUILD_ID")
ERROR_CHANNEL_ID = os.getenv("ERROR_CHANNEL_ID")
SEARCH_METRICS_CHANNEL_ID = os.getenv("SEARCH_METRICS_CHANNEL_ID")
EXPORT_METRICS_CHANNEL_ID = os.getenv("EXPORT_METRICS_CHANNEL_ID")
DELETE_METRICS_CHANNEL_ID = os.getenv("DELETE_METRICS_CHANNEL_ID")
TEST_SEARCH_METRICS_CHANNEL_ID = os.getenv("TEST_SEARCH_METRICS_CHANNEL_ID")
TEST_EXPORT_METRICS_CHANNEL_ID = os.getenv("TEST_EXPORT_METRICS_CHANNEL_ID")
TEST_DELETE_METRICS_CHANNEL_ID = os.getenv("TEST_DELETE_METRICS_CHANNEL_ID")
GUILD_ID = int(GUILD_ID) if GUILD_ID is not None else GUILD_ID
ERROR_CHANNEL_ID = int(ERROR_CHANNEL_ID) if ERROR_CHANNEL_ID is not None else ERROR_CHANNEL_ID
SEARCH_METRICS_CHANNEL_ID = int(SEARCH_METRICS_CHANNEL_ID) if SEARCH_METRICS_CHANNEL_ID is not None else SEARCH_METRICS_CHANNEL_ID
EXPORT_METRICS_CHANNEL_ID = int(EXPORT_METRICS_CHANNEL_ID) if EXPORT_METRICS_CHANNEL_ID is not None else EXPORT_METRICS_CHANNEL_ID
DELETE_METRICS_CHANNEL_ID = int(DELETE_METRICS_CHANNEL_ID) if DELETE_METRICS_CHANNEL_ID is not None else DELETE_METRICS_CHANNEL_ID
TEST_SEARCH_METRICS_CHANNEL_ID = int(TEST_SEARCH_METRICS_CHANNEL_ID) if TEST_SEARCH_METRICS_CHANNEL_ID is not None else TEST_SEARCH_METRICS_CHANNEL_ID
TEST_EXPORT_METRICS_CHANNEL_ID = int(TEST_EXPORT_METRICS_CHANNEL_ID) if TEST_EXPORT_METRICS_CHANNEL_ID is not None else TEST_EXPORT_METRICS_CHANNEL_ID
TEST_DELETE_METRICS_CHANNEL_ID = int(TEST_DELETE_METRICS_CHANNEL_ID) if TEST_DELETE_METRICS_CHANNEL_ID is not None else TEST_DELETE_METRICS_CHANNEL_ID
DB_NAME = os.getenv("DB_NAME")

assert DISCORD_TOKEN
assert ERROR_CHANNEL_ID
if DB_NAME == "testing":
    assert TEST_SEARCH_METRICS_CHANNEL_ID
    assert TEST_EXPORT_METRICS_CHANNEL_ID
    assert TEST_DELETE_METRICS_CHANNEL_ID
else:
    assert SEARCH_METRICS_CHANNEL_ID
    assert EXPORT_METRICS_CHANNEL_ID
    assert DELETE_METRICS_CHANNEL_ID

METRICS_CHANNEL_MAP = dict(
    testing=dict(
        search=TEST_SEARCH_METRICS_CHANNEL_ID,
        export=TEST_EXPORT_METRICS_CHANNEL_ID,
        delete=TEST_DELETE_METRICS_CHANNEL_ID
    ),
    production=dict(
        search=SEARCH_METRICS_CHANNEL_ID,
        export=EXPORT_METRICS_CHANNEL_ID,
        delete=DELETE_METRICS_CHANNEL_ID
    )
)
